/*
GENO 0016.005.11 - 20241129 Genome Dashboard Subscription Adds Performance
Genome Dashboard - Adds Performance
Includes 3rd Party
Version Date: 20241129
*/

/* Dashboard Dates */

declare dashboard_report_start_date date default date(current_date('Australia/Sydney') - 1);
declare dashboard_report_end_date date default date(current_date('Australia/Sydney') - 1);

/* Relative Dates */

declare dashboard_report_period int64 default (date_diff(dashboard_report_end_date, dashboard_report_start_date, day) + 1);
declare dashboard_calendar_period_days int64 default (365 * 2);
declare dashboard_calendar_end_date date default dashboard_report_end_date;
declare dashboard_calendar_start_date date default date_sub(dashboard_calendar_end_date, interval (dashboard_calendar_period_days - 1) day);
declare dashboard_week_start_date date default date_sub(dashboard_report_end_date, interval 6 day);
declare dashboard_week_end_date date default dashboard_report_end_date; 
declare dashboard_prior_year_start_date date default date_sub(dashboard_report_end_date, interval ((365 * 2) - 1) day); 
declare dashboard_prior_year_end_date date default date_sub(dashboard_report_end_date, interval (365) day);
declare dashboard_current_year_start_date date default date_sub(dashboard_report_end_date, interval (365 - 1) day);
declare dashboard_current_year_end_date date default dashboard_report_end_date;
declare dashboard_rolling_6_weeks_start_date date default date_sub(dashboard_report_end_date, interval ((6 * 7) - 1) day); 
declare dashboard_rolling_6_weeks_end_date date default dashboard_report_end_date; 

/* Maximum Date from Source */

declare max_date_from_data date default (select cast(max(dw_subscriber_movement_date) as date) from `ncau-cons-dev-datagenome.prstn_genome.t_subscriber_adds` tsa where 1=1 and tsa.dw_partition_date between dashboard_calendar_start_date and  dashboard_calendar_end_date
);

/* Filter Parameters */

declare member_type_parameter string default 'subscriber';
declare customer_type_parameter array<string> default [];
declare masthead_parameter array<string> default [];
declare classification_level_2_parameter array<string> default [];
declare customer_type_string_parameter string default array_to_string(customer_type_parameter,'|');

/* Partition Dates */

-- declare rpd_pt_date array<date> default (select array_agg(distinct pt_date) from(select max(dw_tgt_partition_date) as pt_date from  `ncau-data-newsquery-prd.bdm_consumer.rate_plan_dim` where dw_tgt_partition_date between current_date('Australia/Sydney') - 14 and current_date('Australia/Sydney'))); --<='2199-12-31'));

/* Report Run Date */

declare dashboard_run_date date default date(current_date('Australia/Sydney') - 1);

with relative_calendar_dim

as

(
select

cal.calendar_date as report_date
, case when cal.calendar_date between dashboard_prior_year_start_date and dashboard_prior_year_end_date then cast(cal.calendar_date as date) + 365
  else cast(cal.calendar_date as date) end as dashboard_reporting_yoy_report_date

/* Relative Date Flag Logic*/

, case when cal.calendar_date = dashboard_report_end_date then 1 else 0 end as dashboard_reporting_closing_base_flag
, case when cal.calendar_date = dashboard_report_end_date - 1 then 1 else 0 end as dashboard_reporting_prior_closing_base_flag
, case when cal.calendar_date between dashboard_report_start_date and dashboard_report_end_date then 1 else 0 end as dashboard_reporting_period_flag
, case when cal.calendar_date between dashboard_report_start_date - dashboard_report_period and dashboard_report_end_date - dashboard_report_period then 1 else 0 end as dashboard_reporting_prior_period_flag
, case when cal.calendar_date = dashboard_report_end_date - dashboard_report_period then 1 else 0 end as dashboard_reporting_prior_period_closing_base_flag
, case when cal.calendar_date between dashboard_report_end_date - 6 and dashboard_report_end_date then 1 else 0 end as dashboard_reporting_week_flag
, case when cal.calendar_date between dashboard_rolling_6_weeks_start_date and dashboard_rolling_6_weeks_end_date then 1 else 0 end as dashboard_reporting_rolling_6_weeks_flag
, case when cal.calendar_date between dashboard_report_end_date - 6 and dashboard_report_end_date then 1 else 0 end as dashboard_reporting_closing_base_filter_flag
, case when cal.calendar_date between dashboard_prior_year_start_date and dashboard_prior_year_end_date then 1 else 0 end as dashboard_reporting_prior_year_flag
, case when cal.calendar_date between dashboard_current_year_start_date and dashboard_current_year_end_date then 1 else 0 end as dashboard_reporting_current_year_flag
, case when cal.calendar_date between dashboard_prior_year_start_date and dashboard_current_year_end_date then 1 else 0 end as dashboard_reporting_last_2_years_flag


/* Placeholder Flags */

from `ncau-cons-dev-datagenome.reference_data_genome.t_calendar_dim` cal

where 1=1
and cast(cal.calendar_date as date) between dashboard_calendar_start_date and dashboard_calendar_end_date

)
,

subscriber_adds_txfm1

as

(
select 

tsa.subscriber_mosaic_group
, sd.sold_in_source_referrer
, sd.sold_in_channel
, sd.classification_level_2
, sd.offer_category_group
, tsa.subscriber_individual_gender
, tsa.subscriber_individual_age
, sd.key_adds_type
, sd.detail_subscription_movement_count 

/* Rolling Periods Logic */

, rcd.report_date
, rcd.dashboard_reporting_yoy_report_date
, rcd.dashboard_reporting_closing_base_flag
, rcd.dashboard_reporting_prior_closing_base_flag
, rcd.dashboard_reporting_period_flag
, rcd.dashboard_reporting_prior_period_flag
, rcd.dashboard_reporting_prior_period_closing_base_flag
, rcd.dashboard_reporting_week_flag
, rcd.dashboard_reporting_rolling_6_weeks_flag
, rcd.dashboard_reporting_closing_base_filter_flag
, rcd.dashboard_reporting_prior_year_flag
, rcd.dashboard_reporting_current_year_flag
, rcd.dashboard_reporting_last_2_years_flag

from `ncau-cons-dev-datagenome.prstn_genome.t_subscriber_adds` tsa
, unnest(subscription_details) as sd

inner join relative_calendar_dim rcd
on cast(tsa.subscriber_movement_date as date) = cast(rcd.report_date as date) 

where 1=1
and tsa.dw_partition_date between dashboard_calendar_start_date and  dashboard_calendar_end_date
and case when length(member_type_parameter) = 0 then 1 when tsa.member_type = member_type_parameter then 1 else 0 end = 1
and sd.is_paying_flag = 'Y'
and sd.subscription_detail_movement_count_type = 'acquisition'
and case when sd.customer_type in unnest(customer_type_parameter) then 1 when array_length(customer_type_parameter) = 0 then 1 else 0 end = 1 
and case when sd.masthead in unnest(masthead_parameter) then 1 when array_length(masthead_parameter) = 0 then 1 else 0 end = 1 
and case when sd.classification_level_2 in unnest(classification_level_2_parameter) then 1 when array_length(classification_level_2_parameter) = 0 then 1 else 0 end = 1 
)
, 

subscriber_adds_txfm2

as

(
select 

tx1.key_adds_type
, tx1.subscriber_mosaic_group
, tx1.sold_in_source_referrer
, tx1.sold_in_channel
, tx1.classification_level_2
, tx1.offer_category_group
, tx1.subscriber_individual_gender
, tx1.subscriber_individual_age
, tx1.report_date
, tx1.dashboard_reporting_yoy_report_date
, tx1.dashboard_reporting_closing_base_flag
, tx1.dashboard_reporting_prior_closing_base_flag
, tx1.dashboard_reporting_period_flag
, tx1.dashboard_reporting_prior_period_flag
, tx1.dashboard_reporting_prior_period_closing_base_flag
, tx1.dashboard_reporting_week_flag
, tx1.dashboard_reporting_rolling_6_weeks_flag
, tx1.dashboard_reporting_closing_base_filter_flag
, tx1.dashboard_reporting_prior_year_flag
, tx1.dashboard_reporting_current_year_flag
, tx1.dashboard_reporting_last_2_years_flag
, sum(tx1.detail_subscription_movement_count) as adds_count

from subscriber_adds_txfm1 tx1

where 1=1

group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21
)
, 

third_party_txfm1

as

(
select

tpbm.member_type
, tpbm.classification_level_2
, tpbm.is_paying_flag
, tpbm.masthead
, tpbm.detail_subscription_acquisition_count
, tpbm.detail_subscription_cancellation_count
, tpbm.subscription_count

/* Rolling Periods Logic */

, rcd.report_date
, rcd.dashboard_reporting_yoy_report_date
, rcd.dashboard_reporting_closing_base_flag
, rcd.dashboard_reporting_prior_closing_base_flag
, rcd.dashboard_reporting_period_flag
, rcd.dashboard_reporting_prior_period_flag
, rcd.dashboard_reporting_prior_period_closing_base_flag
, rcd.dashboard_reporting_week_flag
, rcd.dashboard_reporting_rolling_6_weeks_flag
, rcd.dashboard_reporting_closing_base_filter_flag
, rcd.dashboard_reporting_prior_year_flag
, rcd.dashboard_reporting_current_year_flag
, rcd.dashboard_reporting_last_2_years_flag

from `ncau-cons-dev-datagenome.prstn_genome.t_third_party_subscription_daily_base_movement` tpbm

inner join relative_calendar_dim rcd
on cast(tpbm.report_date as date) = cast(rcd.report_date as date) 

where 1=1
and tpbm.report_date between dashboard_calendar_start_date and  dashboard_calendar_end_date
and case when length(member_type_parameter) = 0 then 1 when tpbm.member_type = member_type_parameter then 1 else 0 end = 1
and tpbm.is_paying_flag = 'Y'
and case when tpbm.customer_type in unnest(customer_type_parameter) then 1 when array_length(customer_type_parameter) = 0 then 1 else 0 end = 1 
and case when tpbm.masthead in unnest(masthead_parameter) then 1 when array_length(masthead_parameter) = 0 then 1 else 0 end = 1 
and case when tpbm.classification_level_2 in unnest(classification_level_2_parameter) then 1 when array_length(classification_level_2_parameter) = 0 then 1 else 0 end = 1 
and tpbm.masthead not in('SN')

)
,

third_party_txfm2

as

(
select 

tx1.classification_level_2
, '6) 3rd Party' as key_adds_type 
, '6) Not Available' as subscriber_cancel_type
, 'Not Available' as subscriber_mosaic_group
, 'Not Available' as sold_in_source_referrer
, 'Not Available' as sold_in_channel
, 'Not Available' as  offer_category_group
, 'Not Available' as subscriber_individual_gender
, 'Not Available' as subscriber_individual_age
, tx1.report_date
, tx1.dashboard_reporting_yoy_report_date
, tx1.dashboard_reporting_closing_base_flag
, tx1.dashboard_reporting_prior_closing_base_flag
, tx1.dashboard_reporting_period_flag
, tx1.dashboard_reporting_prior_period_flag
, tx1.dashboard_reporting_prior_period_closing_base_flag
, tx1.dashboard_reporting_week_flag
, tx1.dashboard_reporting_rolling_6_weeks_flag
, tx1.dashboard_reporting_closing_base_filter_flag
, tx1.dashboard_reporting_prior_year_flag
, tx1.dashboard_reporting_current_year_flag
, tx1.dashboard_reporting_last_2_years_flag
, sum(tx1.detail_subscription_acquisition_count) as adds_count
, sum(tx1.detail_subscription_cancellation_count) as cancels_count
, sum(tx1.subscription_count) as subscription_count

from third_party_txfm1 tx1

where 1=1

group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22

)
, 

subscriber_adds

as

(
select 

lv1.subscription_group
, lv1.key_adds_type
, lv1.subscriber_mosaic_group
, lv1.sold_in_source_referrer
, lv1.sold_in_channel
, lv1.classification_level_2
, lv1.offer_category_group
, lv1.subscriber_individual_gender
, lv1.subscriber_individual_age
, lv1.report_date
, lv1.dashboard_reporting_yoy_report_date
, lv1.dashboard_reporting_closing_base_flag
, lv1.dashboard_reporting_prior_closing_base_flag
, lv1.dashboard_reporting_period_flag
, lv1.dashboard_reporting_prior_period_flag
, lv1.dashboard_reporting_prior_period_closing_base_flag
, lv1.dashboard_reporting_week_flag
, lv1.dashboard_reporting_rolling_6_weeks_flag
, lv1.dashboard_reporting_closing_base_filter_flag
, lv1.dashboard_reporting_prior_year_flag
, lv1.dashboard_reporting_current_year_flag
, lv1.dashboard_reporting_last_2_years_flag
, sum(lv1.adds_count) as adds_count

from
(
select 

'NCA Subscriptions' as subscription_group
, tx2.key_adds_type
, tx2.subscriber_mosaic_group
, tx2.sold_in_source_referrer
, tx2.sold_in_channel
, tx2.classification_level_2
, tx2.offer_category_group
, tx2.subscriber_individual_gender
, tx2.subscriber_individual_age
, tx2.report_date
, tx2.dashboard_reporting_yoy_report_date
, tx2.dashboard_reporting_closing_base_flag
, tx2.dashboard_reporting_prior_closing_base_flag
, tx2.dashboard_reporting_period_flag
, tx2.dashboard_reporting_prior_period_flag
, tx2.dashboard_reporting_prior_period_closing_base_flag
, tx2.dashboard_reporting_week_flag
, tx2.dashboard_reporting_rolling_6_weeks_flag
, tx2.dashboard_reporting_closing_base_filter_flag
, tx2.dashboard_reporting_prior_year_flag
, tx2.dashboard_reporting_current_year_flag
, tx2.dashboard_reporting_last_2_years_flag
, tx2.adds_count

from subscriber_adds_txfm2 tx2

where 1=1

union all

select 

'3rd Party' as subscription_group
, tx2.key_adds_type
, tx2.subscriber_mosaic_group
, tx2.sold_in_source_referrer
, tx2.sold_in_channel
, tx2.classification_level_2
, tx2.offer_category_group
, tx2.subscriber_individual_gender
, tx2.subscriber_individual_age
, tx2.report_date
, tx2.dashboard_reporting_yoy_report_date
, tx2.dashboard_reporting_closing_base_flag
, tx2.dashboard_reporting_prior_closing_base_flag
, tx2.dashboard_reporting_period_flag
, tx2.dashboard_reporting_prior_period_flag
, tx2.dashboard_reporting_prior_period_closing_base_flag
, tx2.dashboard_reporting_week_flag
, tx2.dashboard_reporting_rolling_6_weeks_flag
, tx2.dashboard_reporting_closing_base_filter_flag
, tx2.dashboard_reporting_prior_year_flag
, tx2.dashboard_reporting_current_year_flag
, tx2.dashboard_reporting_last_2_years_flag
, tx2.adds_count

from third_party_txfm2 tx2

where 1=1

) lv1

where 1=1

group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22

)
,

subscriber_base_txfm1

as

(
select 

sbf.member_type
, sbf.subscriber_mosaic_group
, sbf.subscriber_individual_gender
, sbf.subscriber_individual_age
, sbf.classification_level_2
, sbf.offer_category_group
, sbf.sold_in_channel
, sbf.sold_in_source_referrer
, sbf.subscription_closing_base_flag 
, sbf.subscription_adds_flag
, sbf.subscription_cancels_flag 
, sbf.subscription_count 
, sbf.subscriber_id_src
, sbf.subscriber_closing_base_flag
, sbf.subscriber_adds_flag
, sbf.subscriber_cancels_flag 

/* Calendar Flags & Dates */

, rcd.report_date
, rcd.dashboard_reporting_yoy_report_date
, rcd.dashboard_reporting_closing_base_flag
, rcd.dashboard_reporting_prior_closing_base_flag
, rcd.dashboard_reporting_period_flag
, rcd.dashboard_reporting_prior_period_flag
, rcd.dashboard_reporting_prior_period_closing_base_flag
, rcd.dashboard_reporting_week_flag
, rcd.dashboard_reporting_rolling_6_weeks_flag
, rcd.dashboard_reporting_closing_base_filter_flag
, rcd.dashboard_reporting_prior_year_flag
, rcd.dashboard_reporting_current_year_flag
, rcd.dashboard_reporting_last_2_years_flag

from `ncau-cons-dev-datagenome.prstn_genome.t_subscription_base_history` sbf

inner join relative_calendar_dim rcd
on cast(sbf.report_date as date) = cast(rcd.report_date as date) 
and (rcd.dashboard_reporting_closing_base_flag = 1 or rcd.dashboard_reporting_prior_period_closing_base_flag = 1)

where 1=1
and (sbf.report_date = dashboard_report_end_date or sbf.report_date = dashboard_report_end_date -1)
and sbf.classification_level_2 not in('Print-only')
and case when length(member_type_parameter) = 0 then 1 when sbf.member_type = member_type_parameter then 1 else 0 end = 1
and case when sbf.customer_type in unnest(customer_type_parameter) then 1 when array_length(customer_type_parameter) = 0 then 1 else 0 end = 1 
and case when sbf.masthead in unnest(masthead_parameter) then 1 when array_length(masthead_parameter) = 0 then 1 else 0 end = 1 
and case when sbf.classification_level_2 in unnest(classification_level_2_parameter) then 1 when array_length(classification_level_2_parameter) = 0 then 1 else 0 end = 1 

)
,

subscriber_base

as

(
select

lv1.subscription_group
, lv1.subscriber_mosaic_group
, lv1.subscriber_individual_gender
, lv1.subscriber_individual_age
, lv1.classification_level_2
, lv1.offer_category_group
, lv1.sold_in_channel
, lv1.sold_in_source_referrer
, lv1.report_date
, lv1.dashboard_reporting_yoy_report_date
, lv1.dashboard_reporting_closing_base_flag
, lv1.dashboard_reporting_prior_closing_base_flag
, lv1.dashboard_reporting_period_flag
, lv1.dashboard_reporting_prior_period_flag
, lv1.dashboard_reporting_prior_period_closing_base_flag
, lv1.dashboard_reporting_week_flag
, lv1.dashboard_reporting_rolling_6_weeks_flag
, lv1.dashboard_reporting_closing_base_filter_flag
, lv1.dashboard_reporting_prior_year_flag
, lv1.dashboard_reporting_current_year_flag
, lv1.dashboard_reporting_last_2_years_flag
, sum(lv1.subscription_count) as subscription_count
, sum(lv1.adds_count) as adds_count
, sum(lv1.cancels_count) as cancels_count
, (sum(lv1.adds_count) - sum(lv1.cancels_count)) as growth_count

from
(
select 

'NCA Subscriptions' as subscription_group
, tx1.subscriber_mosaic_group
, tx1.subscriber_individual_gender
, tx1.subscriber_individual_age
, tx1.classification_level_2
, tx1.offer_category_group
, tx1.sold_in_channel
, tx1.sold_in_source_referrer
, tx1.report_date
, tx1.dashboard_reporting_yoy_report_date
, tx1.dashboard_reporting_closing_base_flag
, tx1.dashboard_reporting_prior_closing_base_flag
, tx1.dashboard_reporting_period_flag
, tx1.dashboard_reporting_prior_period_flag
, tx1.dashboard_reporting_prior_period_closing_base_flag
, tx1.dashboard_reporting_week_flag
, tx1.dashboard_reporting_rolling_6_weeks_flag
, tx1.dashboard_reporting_closing_base_filter_flag
, tx1.dashboard_reporting_prior_year_flag
, tx1.dashboard_reporting_current_year_flag
, tx1.dashboard_reporting_last_2_years_flag
, sum(case when tx1.subscription_closing_base_flag = 1 then tx1.subscription_count else 0 end) as subscription_count
, sum(case when tx1.subscription_adds_flag = 1 then tx1.subscription_count else 0 end) as adds_count
, sum(case when tx1.subscription_cancels_flag = 1 then tx1.subscription_count else 0 end) as cancels_count

from subscriber_base_txfm1 tx1  

where 1=1

group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21

union all 

select 

'3rd Party' as subscription_group
, tx2.subscriber_mosaic_group
, tx2.subscriber_individual_gender
, tx2.subscriber_individual_age
, tx2.classification_level_2
, tx2.offer_category_group
, tx2.sold_in_channel
, tx2.sold_in_source_referrer
, tx2.report_date
, tx2.dashboard_reporting_yoy_report_date
, tx2.dashboard_reporting_closing_base_flag
, tx2.dashboard_reporting_prior_closing_base_flag
, tx2.dashboard_reporting_period_flag
, tx2.dashboard_reporting_prior_period_flag
, tx2.dashboard_reporting_prior_period_closing_base_flag
, tx2.dashboard_reporting_week_flag
, tx2.dashboard_reporting_rolling_6_weeks_flag
, tx2.dashboard_reporting_closing_base_filter_flag
, tx2.dashboard_reporting_prior_year_flag
, tx2.dashboard_reporting_current_year_flag
, tx2.dashboard_reporting_last_2_years_flag
, sum(tx2.subscription_count) as subscription_count
, sum(tx2.adds_count) as adds_count
, sum(tx2.cancels_count) as cancels_count

from third_party_txfm2 tx2  

where 1=1

group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21

) lv1

where 1=1

group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21

)

,

genome_dashboard_queries_adds

as

(
select 

/* Adds */

max_date_from_data as adds_max_date

/* Net Adds */

, (array(select as struct 
sum(case when sa.dashboard_reporting_period_flag = 1 and sa.key_adds_type not in('5) Reactivation or Same Day Switch') then sa.adds_count else 0 end) as subscription_net_adds
, sum(case when sa.dashboard_reporting_prior_period_flag = 1 and sa.key_adds_type not in('5) Reactivation or Same Day Switch') then sa.adds_count else 0 end) as subscription_prior_net_adds
, safe_divide(sum(case when sa.dashboard_reporting_period_flag = 1 and sa.key_adds_type not in('5) Reactivation or Same Day Switch') then sa.adds_count else 0 end) - sum(case when sa.dashboard_reporting_prior_period_flag = 1 and sa.key_adds_type not in('5) Reactivation or Same Day Switch') then sa.adds_count else 0 end), sum(case when sa.dashboard_reporting_prior_period_flag = 1 and sa.key_adds_type not in('5) Reactivation or Same Day Switch') then sa.adds_count else 0 end)) as subscription_net_adds_variance
from subscriber_adds sa 
where 1=1 
and (sa.dashboard_reporting_period_flag = 1 or sa.dashboard_reporting_prior_period_flag = 1)
)) as net_adds

/* Key adds Type */ 
/* Current date */

, (array(select as struct 
sa.key_adds_type
, sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, safe_divide(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over()) as subscription_adds_percent

/* Rolling 6 weeks Key_add_type */

, sum(case when sa.dashboard_reporting_rolling_6_weeks_flag = 1 then sa.adds_count else 0 end) as rolling_6_weeks_adds
, safe_divide(sum(case when sa.dashboard_reporting_rolling_6_weeks_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_rolling_6_weeks_flag = 1 then sa.adds_count else 0 end)) over()) as rolling_6_weeks_adds_percent  
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_period_flag = 1 or sa.dashboard_reporting_rolling_6_weeks_flag = 1
group by 1 
order by 1 asc)) as key_adds_type

/* Adds by Audience */

, (array(select as struct 
lv1.*
from
(
select
case when sa.subscriber_mosaic_group = 'Not Available' then 'New Unknown' else sa.subscriber_mosaic_group end as subscriber_mosaic_group 
, sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over() as total_subscription_adds, safe_divide(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over()) as subscription_adds_percent  
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_period_flag = 1
and sa.subscription_group not in('3rd Party')
group by 1
) lv1
where 1=1 
order by 
case when lv1.subscriber_mosaic_group = 'Young Professionals' then 1
      when lv1.subscriber_mosaic_group = 'Growing Families' then 2
      when lv1.subscriber_mosaic_group = 'Older Affluents' then 3
      when lv1.subscriber_mosaic_group = 'Low Income Households' then 4
      when lv1.subscriber_mosaic_group = 'New Unknown' then 5
      else 5 end asc
)) as adds_by_audience

/* Closing Base Audience */

, (array(select as struct 
lv1.*
from
(
select
case when cb.subscriber_mosaic_group = 'Not Available' then 'New Unknown' else cb.subscriber_mosaic_group end as subscriber_mosaic_group 
, sum(case when cb.dashboard_reporting_closing_base_flag = 1 then cb.subscription_count else 0 end) as subscription_count
, sum(sum(case when cb.dashboard_reporting_closing_base_flag = 1 then cb.subscription_count else 0 end)) over() as total_subscription_count, safe_divide(sum(case when cb.dashboard_reporting_closing_base_flag = 1 then cb.subscription_count else 0 end),sum(sum(case when cb.dashboard_reporting_closing_base_flag = 1 then cb.subscription_count else 0 end)) over()) as subscription_closing_base_percent  
from subscriber_base cb 
where 1=1 
and cb.dashboard_reporting_closing_base_flag = 1
and cb.subscription_group not in('3rd Party')
group by 1
) lv1
where 1=1
order by 
case when lv1.subscriber_mosaic_group = 'Young Professionals' then 1
      when lv1.subscriber_mosaic_group = 'Growing Families' then 2
      when lv1.subscriber_mosaic_group = 'Older Affluents' then 3
      when lv1.subscriber_mosaic_group = 'Low Income Households' then 4
      when lv1.subscriber_mosaic_group = 'New Unknown' then 5
      else 5 end asc
)) as adds_audience_closing_base

/* Net Adds 2 Year Trend */

, (array(select as struct 
sa.dashboard_reporting_yoy_report_date as report_date
, sum(case when sa.dashboard_reporting_current_year_flag = 1 then sa.adds_count else 0 end) as this_period_subscription_adds
, sum(case when sa.dashboard_reporting_prior_year_flag = 1 then sa.adds_count else 0 end) as last_period_subscription_adds 
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_last_2_years_flag = 1 
group by 1 
order by 1 asc)) as net_adds_yoy_trend_new

/* Adds by Referrer */

, (array(select as struct 
sa.sold_in_source_referrer
, sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over() as total_subscription_adds
, safe_divide(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over()) as subscription_adds_percent
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_period_flag = 1 
group by 1 
order by 1 asc)) as adds_by_referrer

/* Adds by Referrer 7 Day Trend */

, (array(select as struct 
sa.report_date
, sa.sold_in_source_referrer
, sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date) as total_subscription_adds
, coalesce(safe_divide(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date)),0) as subscription_adds_percent 
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_week_flag = 1 
group by 1,2 
order by 1,2 asc)) as adds_by_referrer_last_7_days

/* Adds by Channel */

, (array(select as struct 
sa.sold_in_channel
, sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over() as total_subscription_adds
, safe_divide(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over()) as subscription_adds_percent
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_period_flag = 1 
group by 1 
order by 1 asc)) as adds_by_channel

/* Adds by Channel 7 Day Trend */

, (array(select as struct 
sa.report_date
, sa.sold_in_channel
, sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date) as total_subscription_adds
, coalesce(safe_divide(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date)),0) as subscription_adds_percent 
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_week_flag = 1 
group by 1,2 
order by 1,2 asc)) as adds_by_channel_last_7_days

/* Adds by Product */

, (array(select as struct 
sa.classification_level_2
, sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over() as total_subscription_adds
, safe_divide(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over()) as subscription_adds_percent  
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_period_flag = 1 
group by 1 
order by 1 asc)) as adds_by_product

/* Adds by Product 7 Day Trend */

, (array(select as struct 
sa.report_date
, sa.classification_level_2
, sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end) as subscription_adds, sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date) as total_subscription_adds
, coalesce(safe_divide(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date)),0) as subscription_adds_percent 
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_week_flag = 1 
group by 1,2 
order by 1,2 asc)) as adds_by_product_last_7_days

/* Adds by Price */

, (array(select as struct 
sa.offer_category_group
, sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over() as total_subscription_adds, safe_divide(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over()) as subscription_adds_percent  
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_period_flag = 1 
group by 1 
order by 1 asc)) as adds_by_price

/* Adds by Price 7 Day Trend */

, (array(select as struct 
sa.report_date
, sa.offer_category_group
, sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date) as total_subscription_adds, coalesce(safe_divide(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date)),0) as subscription_adds_percent 
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_week_flag = 1 
group by 1,2 
order by 1,2 asc)) as adds_by_price_last_7_days

/* Adds by Gender */

, (array(select as struct 
upper(sa.subscriber_individual_gender) as subscriber_individual_gender
, sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over() as total_subscription_adds, safe_divide(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over()) as subscription_adds_percent 
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_period_flag = 1
and upper(sa.subscriber_individual_gender) not in ('NOT AVAILABLE')
group by 1 
order by 1 asc)) as adds_by_gender

/* Adds by Gender 7 Day Trend */

, (array(select as struct 
sa.report_date
, upper(sa.subscriber_individual_gender) as subscriber_individual_gender
, sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date) as total_subscription_adds, coalesce(safe_divide(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_week_flag = 1 then sa.adds_count else 0 end)) over(partition by sa.report_date)),0) as subscription_adds_percent 
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_week_flag = 1 
and upper(sa.subscriber_individual_gender) not in ('NOT AVAILABLE')
group by 1,2 
order by 1,2 asc)) as adds_by_gender_last_7_days

/* Adds by Gender & Age Group */

, (array(select as struct 
upper(sa.subscriber_individual_gender) as subscriber_individual_gender
, sa.subscriber_individual_age
, sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end) as subscription_adds
, sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over() as total_subscription_adds, safe_divide(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end),sum(sum(case when sa.dashboard_reporting_period_flag = 1 then sa.adds_count else 0 end)) over()) as subscription_adds_percent  
from subscriber_adds sa 
where 1=1 
and sa.dashboard_reporting_period_flag = 1 
and upper(sa.subscriber_individual_gender) not in ('NOT AVAILABLE')
and upper(sa.subscriber_individual_age) not in ('NOT AVAILABLE')
group by 1,2 
order by 1,2 asc)) as adds_by_gender_age

)

/* Query */

select

squ.*

from 

genome_dashboard_queries_adds

squ

where 1=1


